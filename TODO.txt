* Cythonize more, read recent tutorials:
    * https://www.peterbaumgartner.com/blog/intro-to-just-enough-cython-to-be-useful/
    * https://members.loria.fr/LMendoza/link/Cython_speedup_notes.html
    * chunking should be moved to functions outside of RSCodec python object, so that we can make a cpdef and use memoryviews. Essentially, all looping functions should be done in cythonized functions, outside of Python objects (we can't cythonize Python objects methods).
    * remove all PyObject calls, especially in bytearrays
        * maybe replace all bytearrays by array 'i' and check if no more python calls
        * or maybe try to create an array with nogil, no PyObject call
        * or another way to make a pure C array? Or any kind of chained list? Something to store an array of items? We just need a basic array, nothing fancy, but with no Python call.
        * use vector as a variable https://stackoverflow.com/questions/54759483/how-to-return-two-values-in-cython-cdef-without-gil-nogil
        * once return type is changed, try to change the exception type, maybe if pointer we set exception to a int instead
    * return types for each functions, especially those returning an array, maybe I can retry returning memoryviews now?
    * replace all len() with array.shape[0]:
    regex search: len\(([^\)]+)\)
    replace: \1.shape[0]
    * add noexcept to cdef functions definitions once we finished unpythonizing all functions, because it will make debugging harder (exceptions will be printed but not propagated) https://cython.readthedocs.io/en/latest/src/userguide/migrating_to_cy30.html#exception-values-and-noexcept and https://cython.readthedocs.io/en/latest/src/userguide/language_basics.html#error-return-values
    * cpdef is slightly faster than cdef + def in classes https://stackoverflow.com/questions/48864631/what-are-the-differences-between-a-cpdef-and-a-cdef-wrapped-in-a-def
    * define return ctype value for each function, otherwise "You don’t need to (and shouldn’t) declare exception values for functions which return Python objects. Remember that a function with no declared return type implicitly returns a Python object. (Exceptions on such functions are implicitly propagated by returning NULL.)".
    * add nogil to most cpdef functions https://stackoverflow.com/questions/54759483/how-to-return-two-values-in-cython-cdef-without-gil-nogil

